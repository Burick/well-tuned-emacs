#+Title: Well Tuned Emacs
#+Author: Роман Захаров
#+Email: zahardzhan@gmail.com

1. В мире свободного программного обеспечения есть две классические
   программы для редактирования текста: минималистичный vi и
   максималистичный emacs. Оба этих редактора появились одновременно,
   в 1976 году, и если vi с тех пор почти не изменился, и сейчас
   входит в состав всех UNIX-подобных операционных систем; то Emacs за
   более чем 30 лет развития стал по-настоящему универсальной
   программой для работы с текстом. Он всеобъемлющ. Emacs может делать
   с текстом все что угодно, как угодно, всеми мыслимыми и немыслимыми
   способами. В него даже встроен vi.

2. Emacs --- легендарное детище лисп-хакеров из MIT. Он был создан
   Ричардом Столлманом, основателем движения свободного программного
   обеспечения и проекта GNU; и Гаем Стили, одним из разработчиков
   языков программирования Common Lisp и Java. Emacs написан на лиспе,
   одном из самых простых и мощных языков программирования. И именно
   лисп позволяет с необычайной легкостью изменять поведение редактора
   и расширять его возможности «на лету».

3. Вот что Столлман говорит о языке, на котором написан Emacs: «Самый
   мощный язык программирования это лисп. Если вы не знаете лиспа, вы
   не знаете, что значит для языка программирования быть мощным и
   элегантным. Если вы изучите лисп, вы увидите чего не хватает в
   большинстве других языков.

   Большинство языков программирования сегодня сосредоточено на
   определении специализированных типов данных, в отличии от них, лисп
   дает вам несколько универсальных типов данных и вы строите свои
   структуры данных из этих универсальных. Таким образом, всесто того
   чтобы вам дать способ определить список-чего-то-одного и
   список-чего-то-другого, в лиспе у вас есть только один тип списка,
   и в нем могут храниться данные любого рода.

   Там где другие языки позволяют вам определить функцию для поиска в
   списке-чего-то-одного, и иногда даже способ определить общую
   функцию для поиска в списке, которую вы можете использовать для
   поиска в списке чего-то-конкретного, лисп с легкостью дает вам
   возможность написать функцию которая будет искать что-угодно в
   любом списке --- и предлагает вам множество таких функций.

   Более того, функции и выражения в лиспе представлены как данные
   таким образом, что ими легко можно оперировать. Вы можете изменять
   код программы с такой же легкостью с какой изменяете любые другие
   данные.

   Когда вы запускаете систему в которой работают программы на лиспе,
   она входит в цикл чтения-вычисления-печати (read-eval-print loop,
   [[https://en.wikipedia.org/wiki/Read-eval-print_loop][REPL]]). Большинство других языков программирования не имеют ничего
   сравнимого с „чтением“ (преобразованием текста программы в
   универсальную структуру данных лиспа), ничего сравнимого с
   „вычислением“ (вычисление в лиспе есть преобразование программы как
   универсальной структуры данных лиспа в другую универсальную
   структуру данных лиспа, т.е. программы в программу), и ничего
   сравнимого с „печатью“ (т.е. все это происходит в реальном времени
   как диалог пользователя с системой). Какие большие недостатки!

   Лисп не труднее понять, чем любой другой язык. Если вы никогда не
   изучали программирование и хотите начать, начните с лиспа. Если вы
   учитесь редактировать тексты Emacs'ом, вы можете выучить лисп
   просто пробуя написать и выполнить команды редактирования для Emacs
   в нем самом. Используйте для этого учебник „[[http://alexott.net/ru/emacs/elisp-intro/elisp-intro-ru.html][Введение в программирование на Emacs Lisp]]“,
   он бесплатный и свободный.

   Вы можете изучить Scheme (и множество других основополагающих идей
   о программировании) из книги „[[http://newstar.rinet.ru/~goga/sicp/sicp-ru-screen.pdf][Структура и интерпретация компьютерных программ]]“
   Абельсона и Сассмана. Эта книга тоже бесплатна».

   Однако, на мой взгляд, самый современный, практичный и
   перспективный из всех современных лиспов --- это [[http://clojure.org][Clojure]].
